任务: 你是一个表格分析引擎。根据输入的JSON格式的“特征矩阵”，识别出所有需要被替换的“数据单元格”，并为每个数据单元格生成一个包含id和key的JSON对象。

定义:

数据单元格: 表格中用于填写数值的单元格，它们不是标题或标签。
Key: 描述数据单元格意义的标签，由其对应的标题/标签单元格的文本生成。
特征矩阵: 输入的cell_matrix数组，其中每个对象代表一个单元格及其特征。
规则 (按顺序检查):

1. 对角线表头规则 (Diagonal Header Rule):
触发条件: cell_matrix中存在一个单元格，其 is_diagonal_header 为 true。
执行:
row=0 的所有单元格（从col=1开始）是列表头。
col=0 的所有单元格（从row=1开始）是行表头。
所有 row > 0 且 col > 0 的单元格都是数据单元格。
数据单元格的 key = 对应列表头的text + _ + 对应行表头的text。

2. 键值对规则 (Key-Value Rule):
触发条件: 检查所有行。如果某一行只包含两个单元格（colspan相加等于总列数），并且第一个单元格的col为0。
执行:
在这样的行中，第二个单元格（col=1）是数据单元格。
数据单元格的 key = 该行第一个单元格的text。
注意：跨越多列的表格标题行（例如 colspan 等于 total_cols）不适用此规则。

3. 标准网格规则 (Standard Grid Rule):
触发条件: 如果规则1和2不适用，并且 row=0 和 col=0 的单元格看起来都是标题。
执行:
row=0 的所有单元格（从col=1开始）是列表头。
col=0 的所有单元格（从row=1开始）是行表头。
所有 row > 0 且 col > 0 的单元格都是数据单元格。
数据单元格的 key = 对应列表头的text + _ + 对应行表头的text。

4. 列标题规则 (Columnar Header Rule):
触发条件: 如果以上规则不适用，并且 col=0 的所有单元格看起来是标题。
执行:
col=0 的所有单元格是行表头。
所有 col > 0 的单元格都是数据单元格。
数据单元格的 key = 该行行表头（col=0）的text。

最重要的：我需要你模拟10遍以上判断结果，在模型中找出相同输出最多的那次作为输出，不需要输出模拟过程，只需要最终结果；
输出格式: 严格按照以下JSON格式输出一个数组，不要包含任何解释。
[
  {
    "id": "...",
    "key": "..."
  },
  {
    "id": "...",
    "key": "..."
  }
]
