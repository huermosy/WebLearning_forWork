# 矩阵化表格字段提取指令（10B小模型优化版）

## 任务定义
你将从HTML表格中提取所有数据单元格，并为每个数据单元格生成(id, key)对。

## 核心概念
- 数据单元格：用于填写数值的单元格，不是标题或标签
- 数据矩阵：将表格看作一个二维矩阵，每个单元格有行列坐标(r,c)
- 特征向量：每个单元格的结构和内容特征
- 表格模式：预定义的表格组织模式

## 提取步骤

### 第1步：构建表格特征矩阵
将HTML表格转换为二维矩阵，并提取每个单元格的特征：
1. 位置特征：行索引、列索引
2. 结构特征：colspan、rowspan、是否对角线分割
3. 内容特征：是否为空、是否包含数字或单位

### 第2步：表格类型判定（严格按顺序检查）
检查表格矩阵的特征模式，判断表格类型：

1. **对角线表头表格**
   - **特征值**：存在`data-diagonal-split-type`属性的单元格
   - **数据区域**：该单元格右下方的所有单元格
   - **key生成**：列标题_行标题

2. **单行键值对表格**
   - **特征值**：只有1行，且单元格数为偶数
   - **数据区域**：偶数位置单元格（第2,4,6...个）
   - **key生成**：对应标签单元格的文本（左侧单元格）

3. **多行键值对表格**
   - **特征值**：存在colspan>1的行（标题行），剩余行形成标签-数据对
   - **数据区域**：标签-数据对中的数据单元格
   - **key生成**：对应标签单元格的文本

4. **标准网格表格**
   - **特征值**：第一行和第一列都是标题
   - **数据区域**：行号>0且列号>0的单元格
   - **key生成**：列标题_行标题

5. **列标题表格**
   - **特征值**：只有第一列是标题
   - **数据区域**：列号>0的单元格
   - **key生成**：对应行的第一列文本

### 第3步：数据单元格定位
根据表格类型，使用对应的规则定位所有数据单元格。确保包括空的数据单元格。

### 第4步：Key生成
为每个数据单元格生成key：
1. 查找与数据单元格关联的标题/标签单元格
2. 根据表格类型使用对应的key模板
3. 不添加任何额外前缀或后缀

## 表格类型判定决策树

```
开始
↓
检查：是否存在data-diagonal-split-type属性?
↓是                        ↓否
对角线表头表格               检查：是否只有一行且单元格数为偶数?
                          ↓是                      ↓否
                          单行键值对表格             检查：是否存在colspan>1的行且剩余行有标签-数据对?
                                                  ↓是                        ↓否
                                                  多行键值对表格               检查：第一行和第一列是否都是标题?
                                                                           ↓是                  ↓否
                                                                           标准网格表格           检查：是否只有第一列是标题?
                                                                                             ↓是              ↓否
                                                                                             列标题表格         特殊形式表格
```

## 表格类型提取示例

### 示例1：对角线表头表格
```html
<tr>
  <td data-diagonal-split-type="tl2br">区分判定要素</td>
  <td>正常</td>
  <td>需注意</td>
</tr>
<tr>
  <td>温差</td>
  <td>5℃及以下</td>
  <td>超过5℃至10℃</td>
</tr>
```
表格特征：
- 有data-diagonal-split-type属性的单元格(0,0)
- 数据单元格：(1,1)和(1,2)
- 列标题：(0,1)="正常"和(0,2)="需注意"
- 行标题：(1,0)="温差"
- key生成："正常_温差"和"需注意_温差"

### 示例2：多行键值对表格
```html
<tr>
  <td colspan="2">Measurements</td>
</tr>
<tr>
  <td>Sp1</td>
  <td>29.3℃</td>
</tr>
<tr>
  <td>Bx1</td>
  <td></td>
</tr>
```
表格特征：
- 第1行有colspan=2，是标题行
- 剩余行形成标签-数据对
- 数据单元格：(1,1)和(2,1)
- key生成："Sp1"和"Bx1"（直接使用标签文本）

### 示例3：混合键值对表格
```html
<tr>
  <td colspan="6">检测工况：</td>
</tr>
<tr>
  <td colspan="2">测试仪器</td>
  <td></td>
  <td colspan="2">图像编号</td>
  <td></td>
</tr>
<tr>
  <td>天气</td>
  <td></td>
  <td>环境</td>
  <td></td>
  <td>湿度</td>
  <td></td>
</tr>
```
表格特征：
- 第1行是标题行（colspan=6）
- 第2行包含两组键值对
- 第3行包含三组键值对
- 数据单元格：(1,2), (1,5), (2,1), (2,3), (2,5)
- key生成："测试仪器", "图像编号", "天气", "环境", "湿度"

## 注意事项
1. 必须提取所有数据单元格，包括空单元格
2. key严格按照表格类型对应的模板生成
3. 不在key中添加任何额外文字
4. 对于多行键值对表格，key直接使用标签文本，不包含表格标题

## 输出格式
```json
[
  {
    "id": "...",
    "key": "..."
  }
]
```

只输出JSON结果，不包含任何解释文本。
