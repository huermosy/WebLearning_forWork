# 表格字段提取指令（10B小模型专用强化版）

## 任务描述
分析HTML表格，提取所有数据单元格的id和key。数据单元格是需要填入数值的位置，不是标题或标签。

## 核心规则
1. **数据单元格**：用于填写数值的单元格（可能为空）
2. **key生成**：使用对应的标题/标签文本，不添加任何前缀后缀
3. **完整提取**：所有数据单元格都必须提取，包括空单元格

## 表格类型识别（严格按序执行）

### 第1步：检查对角线表头
**条件**：存在`data-diagonal-split-type`属性
**如果是**：
- 找到该属性的单元格位置(R,C)
- 数据单元格：行>R且列>C的所有单元格
- key = "列标题_行标题"

### 第2步：检查单行键值对
**条件**：只有1行，且单元格总数为偶数
**如果是**：
- 数据单元格：第2,4,6...个单元格
- key = 左侧单元格的文本

### 第3步：检查多行键值对
**条件**：存在colspan>1的行（标题行）
**如果是**：
- 跳过标题行
- 在剩余行中：
  - 如果一行有2列：第1列=标签，第2列=数据
  - 如果一行有多列：奇数列=标签，偶数列=数据
- key = 对应标签的文本

### 第4步：检查标准网格
**条件**：无colspan>1的行，且第1行和第1列都有多个标题
**如果是**：
- 第1行从第2列开始=列标题
- 第1列从第2行开始=行标题
- 数据单元格：行>0且列>0的单元格
- key = "列标题_行标题"

### 第5步：检查列标题表格
**条件**：无colspan>1的行，且只有第1列是标题
**如果是**：
- 第1列=行标题
- 数据单元格：除第1列外的所有单元格
- key = 该行第1列的文本

### 第6步：其他情况
**条件**：不符合以上任何类型
**处理**：使用data-cell-id作为key

## 具体示例

### 示例1：多行键值对表格
```html
<tr><td colspan="2">Measurements</td></tr>
<tr><td>Sp1</td><td>29.3℃</td></tr>
<tr><td>Bx1</td><td></td></tr>
```
**分析**：
- 第1行有colspan=2，是标题行，跳过
- 第2行：标签"Sp1"，数据"29.3℃"
- 第3行：标签"Bx1"，数据为空
**输出**：
```json
[
  {"id": "table5_cell1_1", "key": "Sp1"},
  {"id": "table5_cell2_1", "key": "Bx1"}
]
```

### 示例2：混合键值对表格
```html
<tr><td colspan="6">检测工况：</td></tr>
<tr><td colspan="2">测试仪器</td><td></td><td colspan="2">图像编号</td><td></td></tr>
<tr><td>天气</td><td></td><td>环境</td><td></td><td>湿度</td><td></td></tr>
```
**分析**：
- 第1行：标题行，跳过
- 第2行：2个键值对："测试仪器"-空值，"图像编号"-空值
- 第3行：3个键值对："天气"-空值，"环境"-空值，"湿度"-空值
**输出**：
```json
[
  {"id": "table4_cell1_1", "key": "测试仪器"},
  {"id": "table4_cell1_3", "key": "图像编号"},
  {"id": "table4_cell2_1", "key": "天气"},
  {"id": "table4_cell2_3", "key": "环境"},
  {"id": "table4_cell2_5", "key": "湿度"}
]
```

## 执行检查清单
1. ✓ 解析HTML，提取所有`data-cell-id`
2. ✓ 按1-6步骤顺序检查表格类型
3. ✓ 识别出所有数据单元格
4. ✓ 为每个数据单元格生成key（使用原始标签文本）
5. ✓ 确保包含空单元格
6. ✓ 输出JSON格式

## 输出格式
```json
[
  {
    "id": "...",
    "key": "..."
  }
]
```

**重要**：只输出JSON，不要任何解释文字。
